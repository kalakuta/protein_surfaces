# rotate cells by 15, 30, 45 degrees to compare with overlapping cells
# sum normals proportionally depending on degree of cell overlap
# proportions were obtained using a monte-carlo method (1E6 trials) to assess
# degree of overlap under rotations of 15, 30, 45
# rotate60 returns new (exact) cell scores under 60 degree rotations
 
import numpy as np

def rotate15(cells):
	[a0,b0,b1,b2,b3,b4,b5,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29] = np.asarray(cells)

	A0 = 0.01 * b1 + 0.96 * a0 + 0.01 * b3 + 0.01 * b4 + 0.01 * b0
	B0 = 0.16 * b1 + 0.7 * b0 + 0.01 * a0 + 0.13 * c1
	B1 = 0.16 * b2 + 0.7 * b1 + 0.01 * a0 + 0.13 * c3
	B2 = 0.16 * b3 + 0.7 * b2 + 0.01 * a0 + 0.13 * c5
	B3 = 0.16 * b4 + 0.7 * b3 + 0.01 * a0 + 0.13 * c7
	B4 = 0.16 * b5 + 0.7 * b4 + 0.01 * a0 + 0.13 * c9
	B5 = 0.16 * b0 + 0.7 * b5 + 0.01 * a0 + 0.13 * c11
	C0 = 0.39 * c0 + 0.36 * c1 + 0.25 * d1
	C2 = 0.39 * c2 + 0.36 * c3 + 0.25 * d4
	C4 = 0.39 * c4 + 0.36 * c5 + 0.25 * d7
	C6 = 0.39 * c6 + 0.36 * c7 + 0.25 * d10
	C8 = 0.39 * c8 + 0.36 * c9 + 0.25 * d13
	C10 = 0.39 * c10 + 0.36 * c11 + 0.25 * d16
	D0 = 0.13 * d0 + 0.32 * e1 + 0.53 * d1 + 0.02 * e2
	D3 = 0.13 * d3 + 0.32 * e5 + 0.53 * d4 + 0.02 * e6
	D6 = 0.13 * d6 + 0.32 * e9 + 0.53 * d7 + 0.02 * e10
	D9 = 0.13 * d9 + 0.32 * e13 + 0.53 * d10 + 0.02 * e14
	D12 = 0.13 * d12 + 0.32 * e17 + 0.53 * d13 + 0.02 * e18
	D15 = 0.13 * d15 + 0.32 * e21 + 0.53 * d16 + 0.02 * e22
	E0 = 0.2 * f2 + 0.54 * e1 + 0.26 * f1
	E4 = 0.2 * f7 + 0.54 * e5 + 0.26 * f6
	E8 = 0.2 * f12 + 0.54 * e9 + 0.26 * f11
	E12 = 0.2 * f17 + 0.54 * e13 + 0.26 * f16
	E16 = 0.2 * f22 + 0.54 * e17 + 0.26 * f21
	E20 = 0.2 * f27 + 0.54 * e21 + 0.26 * f26
	C1 = 0.13 * b1 + 0.05 * d2 + 0.36 * c2 + 0.46 * c1
	C3 = 0.13 * b2 + 0.05 * d5 + 0.36 * c4 + 0.46 * c3
	C5 = 0.13 * b3 + 0.05 * d8 + 0.36 * c6 + 0.46 * c5
	C7 = 0.13 * b4 + 0.05 * d11 + 0.36 * c8 + 0.46 * c7
	C9 = 0.13 * b5 + 0.05 * d14 + 0.36 * c10 + 0.46 * c9
	C11 = 0.13 * b0 + 0.05 * d17 + 0.36 * c0 + 0.46 * c11
	D1 = 0.62 * d2 + 0.05 * c1 + 0.22 * d1 + 0.11 * e2
	D4 = 0.62 * d5 + 0.05 * c3 + 0.22 * d4 + 0.11 * e6
	D7 = 0.62 * d8 + 0.05 * c5 + 0.22 * d7 + 0.11 * e10
	D10 = 0.62 * d11 + 0.05 * c7 + 0.22 * d10 + 0.11 * e14
	D13 = 0.62 * d14 + 0.05 * c9 + 0.22 * d13 + 0.11 * e18
	D16 = 0.62 * d17 + 0.05 * c11 + 0.22 * d16 + 0.11 * e22
	E1 = 0.11 * f2 + 0.03 * e1 + 0.05 * f3 + 0.81 * e2
	E5 = 0.11 * f7 + 0.03 * e5 + 0.05 * f8 + 0.81 * e6
	E9 = 0.11 * f12 + 0.03 * e9 + 0.05 * f13 + 0.81 * e10
	E13 = 0.11 * f17 + 0.03 * e13 + 0.05 * f18 + 0.81 * e14
	E17 = 0.11 * f22 + 0.03 * e17 + 0.05 * f23 + 0.81 * e18
	E21 = 0.11 * f27 + 0.03 * e21 + 0.05 * f28 + 0.81 * e22
	D2 = 0.22 * d2 + 0.01 * d4 + 0.52 * d3 + 0.25 * c2
	D5 = 0.22 * d5 + 0.01 * d7 + 0.52 * d6 + 0.25 * c4
	D8 = 0.22 * d8 + 0.01 * d10 + 0.52 * d9 + 0.25 * c6
	D11 = 0.22 * d11 + 0.01 * d13 + 0.52 * d12 + 0.25 * c8
	D14 = 0.22 * d14 + 0.01 * d16 + 0.52 * d15 + 0.25 * c10
	D17 = 0.22 * d17 + 0.01 * d1 + 0.52 * d0 + 0.25 * c0
	E2 = 0.11 * d2 + 0.03 * d3 + 0.81 * e3 + 0.05 * e2
	E6 = 0.11 * d5 + 0.03 * d6 + 0.81 * e7 + 0.05 * e6
	E10 = 0.11 * d8 + 0.03 * d9 + 0.81 * e11 + 0.05 * e10
	E14 = 0.11 * d11 + 0.03 * d12 + 0.81 * e15 + 0.05 * e14
	E18 = 0.11 * d14 + 0.03 * d15 + 0.81 * e19 + 0.05 * e18
	E22 = 0.11 * d17 + 0.03 * d0 + 0.81 * e23 + 0.05 * e22
	E3 = 0.13 * e5 + 0.31 * d3 + 0.04 * e3 + 0.52 * e4
	E7 = 0.13 * e9 + 0.31 * d6 + 0.04 * e7 + 0.52 * e8
	E11 = 0.13 * e13 + 0.31 * d9 + 0.04 * e11 + 0.52 * e12
	E15 = 0.13 * e17 + 0.31 * d12 + 0.04 * e15 + 0.52 * e16
	E19 = 0.13 * e21 + 0.31 * d15 + 0.04 * e19 + 0.52 * e20
	E23 = 0.13 * e1 + 0.31 * d0 + 0.04 * e23 + 0.52 * e0


	return ([A0,B0,B1,B2,B3,B4,B5,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15,D16,D17,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19,E20,E21,E22,E23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29])


def rotate30(cells):
	[a0,b0,b1,b2,b3,b4,b5,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29] = np.asarray(cells)

	A0 = 0.01 * b1 + 0.01 * b4 + 0.01 * b0 + 0.96 * a0 + 0.01 * b3
	B0 = 0.4 * b1 + 0.4 * b0 + 0.01 * a0 + 0.19 * c1
	B1 = 0.4 * b2 + 0.4 * b1 + 0.01 * a0 + 0.19 * c3
	B2 = 0.4 * b3 + 0.4 * b2 + 0.01 * a0 + 0.19 * c5
	B3 = 0.4 * b4 + 0.4 * b3 + 0.01 * a0 + 0.19 * c7
	B4 = 0.4 * b5 + 0.4 * b4 + 0.01 * a0 + 0.19 * c9
	B5 = 0.4 * b0 + 0.4 * b5 + 0.01 * a0 + 0.19 * c11
	C0 = 0.15 * d2 + 0.7 * c1 + 0.15 * d1
	C2 = 0.15 * d5 + 0.7 * c3 + 0.15 * d4
	C4 = 0.15 * d8 + 0.7 * c5 + 0.15 * d7
	C6 = 0.15 * d11 + 0.7 * c7 + 0.15 * d10
	C8 = 0.15 * d14 + 0.7 * c9 + 0.15 * d13
	C10 = 0.15 * d17 + 0.7 * c11 + 0.15 * d16
	D0 = 0.27 * d2 + 0.27 * d1 + 0.46 * e2
	D3 = 0.27 * d5 + 0.27 * d4 + 0.46 * e6
	D6 = 0.27 * d8 + 0.27 * d7 + 0.46 * e10
	D9 = 0.27 * d11 + 0.27 * d10 + 0.46 * e14
	D12 = 0.27 * d14 + 0.27 * d13 + 0.46 * e18
	D15 = 0.27 * d17 + 0.27 * d16 + 0.46 * e22
	E0 = 0.31 * f2 + 0.31 * f3 + 0.38 * e2
	E4 = 0.31 * f7 + 0.31 * f8 + 0.38 * e6
	E8 = 0.31 * f12 + 0.31 * f13 + 0.38 * e10
	E12 = 0.31 * f17 + 0.31 * f18 + 0.38 * e14
	E16 = 0.31 * f22 + 0.31 * f23 + 0.38 * e18
	E20 = 0.31 * f27 + 0.31 * f28 + 0.38 * e22
	C1 = 0.19 * b1 + 0.07 * c3 + 0.68 * c2 + 0.06 * c1
	C3 = 0.19 * b2 + 0.07 * c5 + 0.68 * c4 + 0.06 * c3
	C5 = 0.19 * b3 + 0.07 * c7 + 0.68 * c6 + 0.06 * c5
	C7 = 0.19 * b4 + 0.07 * c9 + 0.68 * c8 + 0.06 * c7
	C9 = 0.19 * b5 + 0.07 * c11 + 0.68 * c10 + 0.06 * c9
	C11 = 0.19 * b0 + 0.07 * c1 + 0.68 * c0 + 0.06 * c11
	D1 = 0.55 * d2 + 0.27 * d3 + 0.03 * e3 + 0.15 * c2
	D4 = 0.55 * d5 + 0.27 * d6 + 0.03 * e7 + 0.15 * c4
	D7 = 0.55 * d8 + 0.27 * d9 + 0.03 * e11 + 0.15 * c6
	D10 = 0.55 * d11 + 0.27 * d12 + 0.03 * e15 + 0.15 * c8
	D13 = 0.55 * d14 + 0.27 * d15 + 0.03 * e19 + 0.15 * c10
	D16 = 0.55 * d17 + 0.27 * d0 + 0.03 * e23 + 0.15 * c0
	E1 = 0.03 * d2 + 0.83 * e3 + 0.06 * f3 + 0.08 * e2
	E5 = 0.03 * d5 + 0.83 * e7 + 0.06 * f8 + 0.08 * e6
	E9 = 0.03 * d8 + 0.83 * e11 + 0.06 * f13 + 0.08 * e10
	E13 = 0.03 * d11 + 0.83 * e15 + 0.06 * f18 + 0.08 * e14
	E17 = 0.03 * d14 + 0.83 * e19 + 0.06 * f23 + 0.08 * e18
	E21 = 0.03 * d17 + 0.83 * e23 + 0.06 * f28 + 0.08 * e22
	D2 = 0.55 * d4 + 0.03 * e5 + 0.28 * d3 + 0.14 * c2
	D5 = 0.55 * d7 + 0.03 * e9 + 0.28 * d6 + 0.14 * c4
	D8 = 0.55 * d10 + 0.03 * e13 + 0.28 * d9 + 0.14 * c6
	D11 = 0.55 * d13 + 0.03 * e17 + 0.28 * d12 + 0.14 * c8
	D14 = 0.55 * d16 + 0.03 * e21 + 0.28 * d15 + 0.14 * c10
	D17 = 0.55 * d1 + 0.03 * e1 + 0.28 * d0 + 0.14 * c0
	E2 = 0.08 * e5 + 0.46 * d3 + 0.08 * e3 + 0.38 * e4
	E6 = 0.08 * e9 + 0.46 * d6 + 0.08 * e7 + 0.38 * e8
	E10 = 0.08 * e13 + 0.46 * d9 + 0.08 * e11 + 0.38 * e12
	E14 = 0.08 * e17 + 0.46 * d12 + 0.08 * e15 + 0.38 * e16
	E18 = 0.08 * e21 + 0.46 * d15 + 0.08 * e19 + 0.38 * e20
	E22 = 0.08 * e1 + 0.46 * d0 + 0.08 * e23 + 0.38 * e0
	E3 = 0.03 * d4 + 0.09 * e6 + 0.05 * f7 + 0.83 * e5
	E7 = 0.03 * d7 + 0.09 * e10 + 0.05 * f12 + 0.83 * e9
	E11 = 0.03 * d10 + 0.09 * e14 + 0.05 * f17 + 0.83 * e13
	E15 = 0.03 * d13 + 0.09 * e18 + 0.05 * f22 + 0.83 * e17
	E19 = 0.03 * d16 + 0.09 * e22 + 0.05 * f27 + 0.83 * e21
	E23 = 0.03 * d1 + 0.09 * e2 + 0.05 * f2 + 0.83 * e1


	return ([A0,B0,B1,B2,B3,B4,B5,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15,D16,D17,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19,E20,E21,E22,E23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29])


def rotate45(cells):
	[a0,b0,b1,b2,b3,b4,b5,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29] = np.asarray(cells)

	A0 = 0.01 * b1 + 0.96 * a0 + 0.01 * b3 + 0.01 * b4 + 0.01 * b0
	B0 = 0.7 * b1 + 0.16 * b0 + 0.01 * a0 + 0.13 * c1
	B1 = 0.7 * b2 + 0.16 * b1 + 0.01 * a0 + 0.13 * c3
	B2 = 0.7 * b3 + 0.16 * b2 + 0.01 * a0 + 0.13 * c5
	B3 = 0.7 * b4 + 0.16 * b3 + 0.01 * a0 + 0.13 * c7
	B4 = 0.7 * b5 + 0.16 * b4 + 0.01 * a0 + 0.13 * c9
	B5 = 0.7 * b0 + 0.16 * b5 + 0.01 * a0 + 0.13 * c11
	C0 = 0.25 * d2 + 0.39 * c2 + 0.36 * c1
	C2 = 0.25 * d5 + 0.39 * c4 + 0.36 * c3
	C4 = 0.25 * d8 + 0.39 * c6 + 0.36 * c5
	C6 = 0.25 * d11 + 0.39 * c8 + 0.36 * c7
	C8 = 0.25 * d14 + 0.39 * c10 + 0.36 * c9
	C10 = 0.25 * d17 + 0.39 * c0 + 0.36 * c11
	D0 = 0.53 * d2 + 0.13 * d3 + 0.32 * e3 + 0.02 * e2
	D3 = 0.53 * d5 + 0.13 * d6 + 0.32 * e7 + 0.02 * e6
	D6 = 0.53 * d8 + 0.13 * d9 + 0.32 * e11 + 0.02 * e10
	D9 = 0.53 * d11 + 0.13 * d12 + 0.32 * e15 + 0.02 * e14
	D12 = 0.53 * d14 + 0.13 * d15 + 0.32 * e19 + 0.02 * e18
	D15 = 0.53 * d17 + 0.13 * d0 + 0.32 * e23 + 0.02 * e22
	E0 = 0.54 * e3 + 0.2 * f3 + 0.26 * f4
	E4 = 0.54 * e7 + 0.2 * f8 + 0.26 * f9
	E8 = 0.54 * e11 + 0.2 * f13 + 0.26 * f14
	E12 = 0.54 * e15 + 0.2 * f18 + 0.26 * f19
	E16 = 0.54 * e19 + 0.2 * f23 + 0.26 * f24
	E20 = 0.54 * e23 + 0.2 * f28 + 0.26 * f29
	C1 = 0.05 * d4 + 0.12 * b1 + 0.47 * c3 + 0.36 * c2
	C3 = 0.05 * d7 + 0.12 * b2 + 0.47 * c5 + 0.36 * c4
	C5 = 0.05 * d10 + 0.12 * b3 + 0.47 * c7 + 0.36 * c6
	C7 = 0.05 * d13 + 0.12 * b4 + 0.47 * c9 + 0.36 * c8
	C9 = 0.05 * d16 + 0.12 * b5 + 0.47 * c11 + 0.36 * c10
	C11 = 0.05 * d1 + 0.12 * b0 + 0.47 * c1 + 0.36 * c0
	D1 = 0.22 * d4 + 0.53 * d3 + 0.25 * c2
	D4 = 0.22 * d7 + 0.53 * d6 + 0.25 * c4
	D7 = 0.22 * d10 + 0.53 * d9 + 0.25 * c6
	D10 = 0.22 * d13 + 0.53 * d12 + 0.25 * c8
	D13 = 0.22 * d16 + 0.53 * d15 + 0.25 * c10
	D16 = 0.22 * d1 + 0.53 * d0 + 0.25 * c0
	E1 = 0.03 * e5 + 0.32 * d3 + 0.12 * e3 + 0.53 * e4
	E5 = 0.03 * e9 + 0.32 * d6 + 0.12 * e7 + 0.53 * e8
	E9 = 0.03 * e13 + 0.32 * d9 + 0.12 * e11 + 0.53 * e12
	E13 = 0.03 * e17 + 0.32 * d12 + 0.12 * e15 + 0.53 * e16
	E17 = 0.03 * e21 + 0.32 * d15 + 0.12 * e19 + 0.53 * e20
	E21 = 0.03 * e1 + 0.32 * d0 + 0.12 * e23 + 0.53 * e0
	D2 = 0.62 * d4 + 0.1 * e6 + 0.05 * c3 + 0.23 * d5
	D5 = 0.62 * d7 + 0.1 * e10 + 0.05 * c5 + 0.23 * d8
	D8 = 0.62 * d10 + 0.1 * e14 + 0.05 * c7 + 0.23 * d11
	D11 = 0.62 * d13 + 0.1 * e18 + 0.05 * c9 + 0.23 * d14
	D14 = 0.62 * d16 + 0.1 * e22 + 0.05 * c11 + 0.23 * d17
	D17 = 0.62 * d1 + 0.1 * e2 + 0.05 * c1 + 0.23 * d2
	E2 = 0.1 * d4 + 0.82 * e5 + 0.02 * d3 + 0.06 * e6
	E6 = 0.1 * d7 + 0.82 * e9 + 0.02 * d6 + 0.06 * e10
	E10 = 0.1 * d10 + 0.82 * e13 + 0.02 * d9 + 0.06 * e14
	E14 = 0.1 * d13 + 0.82 * e17 + 0.02 * d12 + 0.06 * e18
	E18 = 0.1 * d16 + 0.82 * e21 + 0.02 * d15 + 0.06 * e22
	E22 = 0.1 * d1 + 0.82 * e1 + 0.02 * d0 + 0.06 * e2
	E3 = 0.81 * e6 + 0.04 * e7 + 0.1 * f8 + 0.05 * f7
	E7 = 0.81 * e10 + 0.04 * e11 + 0.1 * f13 + 0.05 * f12
	E11 = 0.81 * e14 + 0.04 * e15 + 0.1 * f18 + 0.05 * f17
	E15 = 0.81 * e18 + 0.04 * e19 + 0.1 * f23 + 0.05 * f22
	E19 = 0.81 * e22 + 0.04 * e23 + 0.1 * f28 + 0.05 * f27
	E23 = 0.81 * e2 + 0.04 * e3 + 0.1 * f3 + 0.05 * f2

	return ([A0,B0,B1,B2,B3,B4,B5,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15,D16,D17,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19,E20,E21,E22,E23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29])



def rotate60(cells):
	[a0,b0,b1,b2,b3,b4,b5,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,f0,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29] = np.asarray(cells)

	return([a0,b1,b2,b3,b4,b5,b0,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c0,c1,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d0,d1,d2,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e0,e1,e2,e3,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29,f0,f1,f2,f3,f4])